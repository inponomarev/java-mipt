- quote_tags = { emphasis: 'em', strong: 'strong', monospaced: 'code', superscript: 'sup', subscript: 'sup' }
- if (quote_tag = quote_tags[@type])
  = html_tag(quote_tag, { :id => @id, :class => [role, ('fragment' if (option? :step) || (attr? 'step'))].compact }.merge(data_attrs(@attributes)), @text)
- else
  - case @type
  - when :double
    - inline_text_container("&#8220;#{@text}&#8221;")
  - when :single
    = inline_text_container("&#8216;#{@text}&#8217;")
  - when :asciimath, :latexmath
    - open, close = Asciidoctor::INLINE_MATH_DELIMITERS[@type]
    = inline_text_container("#{open}#{@text}#{close}")
  - else
    = inline_text_container(@text)
