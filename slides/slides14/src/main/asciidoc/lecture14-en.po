#. extracted from lecture.adoc
msgid ""
msgstr ""
"Project-Id-Version: slides 14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-24 21:31+0300\n"
"PO-Revision-Date: 2023-02-24 21:14+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: en_UK\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Poedit 3.2.2\n"

#: lecture.adoc:25
msgid ""
"= Core Java. Лекция 14: Spring AOP (окончание). Spring Boot\n"
"Иван Пономарёв, КУРС/МФТИ\n"
":revealjs_theme: black\n"
":revealjs_customtheme: white_course.css\n"
":revealjs_slideNumber:\n"
":revealjs_history:\n"
":revealjs_progress:\n"
":encoding: UTF-8\n"
":lang: ru\n"
"include::_doc_general_attributes.adoc[]\n"
":doctype: article\n"
":toclevels: 3\n"
":imagesdir: images\n"
":source-highlighter: highlightjs\n"
":highlightjsdir: highlight\n"
":icons: font\n"
":iconfont-remote!:\n"
":iconfont-name: font-awesome-4.7.0/css/font-awesome\n"
":revealjs_mouseWheel: true\n"
":revealjs_center: false\n"
":revealjs_transition: none\n"
":revealjs_width: 1600\n"
":revealjs_height: 900\n"
":stem: latexmath"
msgstr ""
"= Core Java. Lecture #14: Spring AOP (ending). Spring Boot\n"
"Ivan Ponomarev, Synthesized.io/MIPT\n"
":revealjs_theme: black\n"
":revealjs_customtheme: white_course.css\n"
":revealjs_slideNumber:\n"
":revealjs_history:\n"
":revealjs_progress:\n"
":encoding: UTF-8\n"
":lang: ru\n"
"include::_doc_general_attributes.adoc[]\n"
":doctype: article\n"
":toclevels: 3\n"
":imagesdir: images\n"
":source-highlighter: highlightjs\n"
":highlightjsdir: highlight\n"
":icons: font\n"
":iconfont-remote!:\n"
":iconfont-name: font-awesome-4.7.0/css/font-awesome\n"
":revealjs_mouseWheel: true\n"
":revealjs_center: false\n"
":revealjs_transition: none\n"
":revealjs_width: 1600\n"
":revealjs_height: 900\n"
":stem: latexmath"

#: lecture.adoc:28
msgid ":!figure-caption:"
msgstr ":!figure-caption:"

#: lecture.adoc:30
msgid "ponomarev@corchestra.ru"
msgstr "ponomarev@corchestra.ru"

#: lecture.adoc:32
msgid "icon:twitter[size=lg] @inponomarev"
msgstr "icon:twitter[size=lg] @inponomarev"

#: lecture.adoc:34
msgid "== Жизненный цикл бина (напоминание)"
msgstr "== Bean life cycle (reminder)"

#: lecture.adoc:55
msgid ""
"[graphviz,beanlifecycle.png]\n"
"----\n"
"digraph G {\n"
"graph [ dpi = 180 ];\n"
"rankdir=\"LR\";\n"
"node[shape=box];\n"
"Constructor -> configurer1;\n"
"subgraph cluster_1 {\n"
"  label = \"Configuration\";\n"
"  configurer3 -> configurer2 -> configurer1 [dir=\"back\"];\n"
"  {rank=same configurer1 configurer2 configurer3}\n"
"}\n"
"subgraph cluster_2{\n"
"  label=\"Initialization\";\n"
"  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
"  {rank=same postConstruct1 postConstruct2}\n"
"}\n"
"configurer3 -> postConstruct1;\n"
"subgraph cluster_3 {\n"
"  label = \"Wrapping\";"
msgstr ""
"[graphviz,beanlifecycle.png]\n"
"----\n"
"digraph G {\n"
"graph [ dpi = 180 ];\n"
"rankdir=\"LR\";\n"
"node[shape=box];\n"
"Constructor -> configurer1;\n"
"subgraph cluster_1 {\n"
"  label = \"Configuration\";\n"
"  configurer3 -> configurer2 -> configurer1 [dir=\"back\"];\n"
"  {rank=same configurer1 configurer2 configurer3}\n"
"}\n"
"subgraph cluster_2{\n"
"  label=\"Initialization\";\n"
"  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
"  {rank=same postConstruct1 postConstruct2}\n"
"}\n"
"configurer3 -> postConstruct1;\n"
"subgraph cluster_3 {\n"
"  label = \"Wrapping\";"

#: lecture.adoc:62
msgid ""
"  proxyconfigurer2 -> proxyconfigurer1  [dir=\"back\"];\n"
"  {rank=same proxyconfigurer2 proxyconfigurer1}\n"
"} \n"
"postConstruct2 -> proxyconfigurer1;\n"
"}\n"
"----"
msgstr ""
"  proxyconfigurer2 -> proxyconfigurer1  [dir=\"back\"];\n"
"  {rank=same proxyconfigurer2 proxyconfigurer1}\n"
"} \n"
"postConstruct2 -> proxyconfigurer1;\n"
"}\n"
"----"

#: lecture.adoc:64
msgid "== Разруливание неоднозначностей"
msgstr "== Disambiguation"

#: lecture.adoc:74
msgid ""
"[plantuml,manyimplementatons.png]\n"
"----\n"
"@startuml\n"
"skinparam dpi 180\n"
"interface Bar\n"
"class Foo\n"
"class Bar1\n"
"class Bar2\n"
"class Bar3"
msgstr ""
"[plantuml,manyimplementatons.png]\n"
"----\n"
"@startuml\n"
"skinparam dpi 180\n"
"interface Bar\n"
"class Foo\n"
"class Bar1\n"
"class Bar2\n"
"class Bar3"

#: lecture.adoc:78
msgid ""
"Bar <|..Bar1\n"
"Bar <|..Bar2\n"
"Bar <|..Bar3"
msgstr ""
"Bar <|..Bar1\n"
"Bar <|..Bar2\n"
"Bar <|..Bar3"

#: lecture.adoc:83
msgid ""
"note right of Bar\n"
" Что же выбрать\n"
" из подходящих кандидатур?\n"
"end note"
msgstr ""
"note right of Bar\n"
" What to choose\n"
" of the eligible candidates?\n"
"end note"

#: lecture.adoc:86
msgid "Foo -> \"bar\" Bar"
msgstr "Foo -> \"bar\" Bar"

#: lecture.adoc:89
msgid ""
"@enduml\n"
"----"
msgstr ""
"@enduml\n"
"----"

#: lecture.adoc:95
msgid ""
"----\n"
"NoUniqueBeanDefinitionException: No qualifying bean of\n"
"type 'edu.phystech.robotlecturer.Bar' available: expected\n"
"single matching bean but found 3: bar1,bar2,bar3\n"
"----"
msgstr ""
"----\n"
"NoUniqueBeanDefinitionException: No qualifying bean of\n"
"type 'edu.phystech.robotlecturer.Bar' available: expected\n"
"single matching bean but found 3: bar1,bar2,bar3\n"
"----"

#: lecture.adoc:97
msgid "== Привязка по имени (неявная)"
msgstr "== Binding by name (implicit)"

#: lecture.adoc:105
msgid ""
"[source,java]\n"
"----\n"
"@Component\n"
"public class Foo {\n"
"    //Не работает... :-(\n"
"    @Autowired\n"
"    private Bar bar;"
msgstr ""
"[source,java]\n"
"----\n"
"@Component\n"
"public class Foo {\n"
"    //Doesn't work... :-(\n"
"    @Autowired\n"
"    private Bar bar;"

#: lecture.adoc:112
msgid ""
"    //Работает!! :-)\n"
"    @Autowired\n"
"    private Bar bar1;\n"
"    ...\n"
"}\n"
"----"
msgstr ""
"    //It works!! :-)\n"
"    @Autowired\n"
"    private Bar bar1;\n"
"    ...\n"
"}\n"
"----"

#: lecture.adoc:114
msgid "== Привязка по имени (явная)"
msgstr "== Binding by name (explicit)"

#: lecture.adoc:125
msgid ""
"[source,java]\n"
"----\n"
"@Component\n"
"public class Foo {\n"
"    @Autowired\n"
"    @Qualifier(\"bar1\")\n"
"    private Bar bar;\n"
"    ...\n"
"}\n"
"----"
msgstr ""
"[source,java]\n"
"----\n"
"@Component\n"
"public class Foo {\n"
"    @Autowired\n"
"    @Qualifier(\"bar1\")\n"
"    private Bar bar;\n"
"    ...\n"
"}\n"
"----"

#: lecture.adoc:127
msgid "== Помечаем одну из имплементаций как @Primary"
msgstr "== Mark one of the implementations as @Primary"

#: lecture.adoc:133
msgid ""
"[source,java]\n"
"----\n"
"@Component\n"
"@Primary\n"
"public class Bar1 implements Bar {...}"
msgstr ""
"[source,java]\n"
"----\n"
"@Component\n"
"@Primary\n"
"public class Bar1 implements Bar {...}"

#: lecture.adoc:144
msgid ""
"@Component\n"
"public class Foo {\n"
"    //Подставится Bar1\n"
"    @Autowired\n"
"    private Bar bar;\n"
"    ...\n"
"}\n"
"----\n"
"[.fragment]\n"
"Но это работает, лишь если действительно один из бинов помечен как "
"`@Primary`, иначе \"NoUniqueBeanDefinitionException: more than one 'primary' "
"bean found among candidates\"."
msgstr ""
"@Component\n"
"public class Foo {\n"
"    //Bar1 is injected\n"
"    @Autowired\n"
"    private Bar bar;\n"
"    ...\n"
"}\n"
"----\n"
"[.fragment]\n"
"But this only works if only one of the beans is marked as `@Primary`, "
"otherwise \"NoUniqueBeanDefinitionException: more than one 'primary' bean "
"found among candidates\"."

#: lecture.adoc:146
msgid "== Но гораздо чаще нам нужны сразу все!"
msgstr "== But more often we need everything at once!"

#: lecture.adoc:149
msgid ""
"[source,java]\n"
"----"
msgstr ""
"[source,java]\n"
"----"

#: lecture.adoc:152
msgid ""
"@Component\n"
"public class Foo {"
msgstr ""
"@Component\n"
"public class Foo {"

#: lecture.adoc:155
msgid ""
"    @Autowired\n"
"    private List<Bar> bar;"
msgstr ""
"    @Autowired\n"
"    private List<Bar> bar;"

#: lecture.adoc:157
msgid "    //ИЛИ"
msgstr "    //OR"

#: lecture.adoc:160
msgid ""
"    @Autowired\n"
"    private Map<String,Bar> bar;"
msgstr ""
"    @Autowired\n"
"    private Map<String,Bar> bar;"

#: lecture.adoc:162
msgid "---- "
msgstr "---- "

#: lecture.adoc:164
msgid "== Впрыскивать можно не только бины, но и что-то попроще"
msgstr "== You can inject not only beans, but also something simpler"

#: lecture.adoc:171
msgid ""
"[source,java]\n"
"----\n"
"@Configuration\n"
"//Путь к файлу с настройками\n"
"@PropertySource(\"classpath:config.properties\")\n"
"public class Config {"
msgstr ""
"[source,java]\n"
"----\n"
"@Configuration\n"
"//Path to the customization file\n"
"@PropertySource(\"classpath:config.properties\")\n"
"public class Config {"

#: lecture.adoc:173
msgid "}"
msgstr "}"

#: lecture.adoc:178
msgid ""
"@Component\n"
"public class Foo {\n"
"    @Value(\"${url}\")\n"
"    String url;"
msgstr ""
"@Component\n"
"public class Foo {\n"
"    @Value(\"${url}\")\n"
"    String url;"

#: lecture.adoc:182
msgid ""
"    @Value(\"${password}\")\n"
"    String password;\n"
"----"
msgstr ""
"    @Value(\"${password}\")\n"
"    String password;\n"
"----"

#: lecture.adoc:184
msgid "Также можно использовать SpEL-выражения, например `#{bar.url}`."
msgstr "You can also use SpEL expressions, such as `#{bar.url}`."

#: lecture.adoc:186
msgid "== Инициализация"
msgstr "== Object Initialization"

#: lecture.adoc:195
msgid ""
"[graphviz,\"postconstruct.png\"]\n"
"----\n"
"digraph G {\n"
"graph [ dpi = 180 ];\n"
"rankdir=\"LR\";\n"
"node[shape=box];\n"
"Constructor -> configurer1;"
msgstr ""
"[graphviz,\"postconstruct.png\"]\n"
"----\n"
"digraph G {\n"
"graph [ dpi = 180 ];\n"
"rankdir=\"LR\";\n"
"node[shape=box];\n"
"Constructor -> configurer1;"

#: lecture.adoc:201
msgctxt "lecture.adoc:201"
msgid ""
"subgraph cluster_1 {\n"
"  label = \"Configuration\";\n"
"  configurer2 -> configurer1 [dir=\"back\"];\n"
"  {rank=same configurer1 configurer2}\n"
"}"
msgstr ""
"subgraph cluster_1 {\n"
"  label = \"Configuration\";\n"
"  configurer2 -> configurer1 [dir=\"back\"];\n"
"  {rank=same configurer1 configurer2}\n"
"}"

#: lecture.adoc:212
msgid ""
"subgraph cluster_2{\n"
"  label=\"Initialization\";\n"
"  style=\"filled\";\n"
"  color=\"#ffffcc\";\n"
"  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
"  {rank=same postConstruct1 postConstruct2}\n"
"}\n"
"configurer2 -> postConstruct1;\n"
"}\n"
"----"
msgstr ""
"subgraph cluster_2{\n"
"  label=\"Initialization\";\n"
"  style=\"filled\";\n"
"  color=\"#ffffcc\";\n"
"  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
"  {rank=same postConstruct1 postConstruct2}\n"
"}\n"
"configurer2 -> postConstruct1;\n"
"}\n"
"----"

#: lecture.adoc:214
msgid "Конструктор не годится в качестве инициализирующего метода!"
msgstr "The constructor is not suitable as an initializing method!"

#: lecture.adoc:216
msgid "== Инициализация "
msgstr "== Object Initialization"

#: lecture.adoc:219
msgid ""
"* `@PostConstruct` -- стандартная Java-аннотация, может быть установлена над "
"методом инициализации.\n"
"* Если навесить аннотацию в классе нельзя, то `@Bean(initMethod= \"init\")`"
msgstr ""
"* `@PostConstruct` is a standard Java annotation that can be put before an "
"initialization method.\n"
"* If you cannot edit the class to insert an annotation, then "
"`@Bean(initMethod= \"init\")`"

#: lecture.adoc:222
msgctxt "lecture.adoc:222"
msgid "== Финализация"
msgstr "== Finalization"

#: lecture.adoc:230
msgid ""
"[graphviz,\"predestroy.png\"]\n"
"----\n"
"digraph G {\n"
"graph [ dpi = 180 ];\n"
"rankdir=\"LR\";\n"
"node[shape=box];\n"
"Constructor -> configurer1;"
msgstr ""
"[graphviz,\"predestroy.png\"]\n"
"----\n"
"digraph G {\n"
"graph [ dpi = 180 ];\n"
"rankdir=\"LR\";\n"
"node[shape=box];\n"
"Constructor -> configurer1;"

#: lecture.adoc:236
msgctxt "lecture.adoc:236"
msgid ""
"subgraph cluster_1 {\n"
"  label = \"Configuration\";\n"
"  configurer2 -> configurer1 [dir=\"back\"];\n"
"  {rank=same configurer1 configurer2}\n"
"}"
msgstr ""
"subgraph cluster_1 {\n"
"  label = \"Configuration\";\n"
"  configurer2 -> configurer1 [dir=\"back\"];\n"
"  {rank=same configurer1 configurer2}\n"
"}"

#: lecture.adoc:243
msgid ""
"subgraph cluster_2{\n"
"  label=\"Initialization\";\n"
"  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
"  {rank=same postConstruct1 postConstruct2}\n"
"}\n"
"configurer2 -> postConstruct1;"
msgstr ""
"subgraph cluster_2{\n"
"  label=\"Initialization\";\n"
"  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
"  {rank=same postConstruct1 postConstruct2}\n"
"}\n"
"configurer2 -> postConstruct1;"

#: lecture.adoc:247
msgid ""
"subgraph cluster_3 {\n"
"  label = \"Wrapping\";"
msgstr ""
"subgraph cluster_3 {\n"
"  label = \"Wrapping\";"

#: lecture.adoc:252
msgid ""
"  proxyconfigurer2 -> proxyconfigurer1  [dir=\"back\"];\n"
"  {rank=same proxyconfigurer2 proxyconfigurer1}\n"
"} \n"
"postConstruct2 -> proxyconfigurer1;"
msgstr ""
"  proxyconfigurer2 -> proxyconfigurer1  [dir=\"back\"];\n"
"  {rank=same proxyconfigurer2 proxyconfigurer1}\n"
"} \n"
"postConstruct2 -> proxyconfigurer1;"

#: lecture.adoc:260
msgid ""
"subgraph cluster_4 {\n"
"  style=\"filled\";\n"
"  color=\"#ffffcc\";\n"
"  label = \"PreDestroy\";\n"
"  preDestroy2 -> preDestroy1  [dir=\"back\"];\n"
"  {rank=same preDestroy1 preDestroy2}\n"
"} "
msgstr ""
"subgraph cluster_4 {\n"
"  style=\"filled\";\n"
"  color=\"#ffffcc\";\n"
"  label = \"PreDestroy\";\n"
"  preDestroy2 -> preDestroy1  [dir=\"back\"];\n"
"  {rank=same preDestroy1 preDestroy2}\n"
"} "

#: lecture.adoc:262
msgctxt "lecture.adoc:262"
msgid "proxyconfigurer2 -> preDestroy1;"
msgstr "proxyconfigurer2 -> preDestroy1;"

#: lecture.adoc:265
msgctxt "lecture.adoc:265"
msgid ""
"}\n"
"----"
msgstr ""
"}\n"
"----"

#: lecture.adoc:267
msgctxt "lecture.adoc:267"
msgid "== Финализация"
msgstr "== Finalization"

#: lecture.adoc:272
msgid ""
"* Симметрично инициализации -- при завершении работы контейнера.\n"
"* При завершении приложения вызывается `context.destroy()`, запускающий "
"механизм финализации.\n"
"* `@PreDestroy` -- стандартная Java-аннотация.\n"
"* Если навесить аннотацию в классе нельзя, то `@Bean(destroyMethod = "
"\"destroy\")`"
msgstr ""
"* Symmetrical to initialization -- when the container shuts down.\n"
"* When the application is terminated, `context.destroy()` is called, which "
"triggers the finalization mechanism.\n"
"* `@PreDestroy` is a standard Java annotation.\n"
"* If you cannot edit a class, then `@Bean(destroyMethod = \"destroy\")`"

#: lecture.adoc:274
msgid "== Практическая задача"
msgstr "== Practical task"

#: lecture.adoc:281
msgid ""
"* Хотим сделать трейсинг приложения: перед началом и после завершения метода "
"должно выводиться в лог его название и штамп времени.\n"
"* Пусть у нас 500 классов по 5 методов\n"
"* Значит, в 2500 мест надо копировать код:\n"
"** не многовато ли??\n"
"** не забудем ли какие-то из методов?\n"
"** смешение бизнес-логики и служебного кода?"
msgstr ""
"* We want to implement tracing: before starting and after the completion of "
"each method, its name and time stamp should be displayed in the log.\n"
"* Let us have 500 classes of 5 methods\n"
"* So, in 2500 places you need to copy some code:\n"
"** Isn't that a bit too much??\n"
"** Will we forget any of the methods?\n"
"** Mixing business logic and utility code?"

#: lecture.adoc:283
msgid "== Aspect-oriented programming спешит на помощь"
msgstr "== Aspect-oriented programming to the rescue"

#: lecture.adoc:290
msgid ""
"* Типичные задачи:\n"
"** _Логирование_: каждый вызов метода должен отмечаться в логе!\n"
"** _Безопасность_: при вызове каждого метода надо проверять, имеем ли мы "
"право на вызов!\n"
"** _Управление транзакциями_: перед началом метода открывать транзакцию, при "
"удачном завершении коммитить, при неудачном -- откатывать.\n"
"* AOP помогает решать эти задачи без дублирования кода внутри методов.\n"
"* Большое количество аспектов уже написано."
msgstr ""
"* Typical tasks:\n"
"** _Logging_: each method call must be marked in the log!\n"
"** _Security_: When calling each method, we need to check if we have the "
"right to call!\n"
"** _Transaction management_: open a transaction before starting the method, "
"commit on successful completion, roll back on unsuccessful.\n"
"* AOP helps to solve these problems without duplicating code within "
"methods.\n"
"* A large number of aspects have already been written."

#: lecture.adoc:292
msgctxt "lecture.adoc:292"
msgid "== Терминология AOP"
msgstr "== AOP terminology"

#: lecture.adoc:294
msgid ""
"* *Joinpoint* -- место в коде, в выполнение которого мы  «вмешиваемся» (и "
"начинаем выполнять что-то своё). В теории может соответствовать вызовам "
"методов, инициализации классов и инстанцированию объектов, но в Spring AOP "
"-- это всегда _вызов метода_."
msgstr ""
"* *Joinpoint* - a place in the code, in the execution of which we \"interfere"
"\" (and begin to execute something of our own). In theory, it can correspond "
"to method calls, class initialization, and object instantiation, but in "
"Spring AOP it is always a _method call_."

#: lecture.adoc:297
msgid "* *Advice* -- код, который «впрыскивается» и выполняется в joinpoint. "
msgstr "* *Advice* -- code that is \"injected\" and executed in joinpoint. "

#: lecture.adoc:300
msgid ""
"* *Pointcut* -- тем или иным способом определённое множество joinpoint-ов. "
"Например, «все методы, начинающиеся со слова get». Или: «все методы, "
"аннотированные аннотацией `@Benchmarked`». Связывая pointcut-ы c advice-ами, "
"мы определяем, что именно и когда будет работать."
msgstr ""
"* *Pointcut* -- a certain set of joinpoints. For example, \"all methods that "
"begin with the word get.\" Or: \"all methods annotated with `@Benchmarked`"
"\". By linking pointcuts to advices, we determine what will work and when."

#: lecture.adoc:302
msgctxt "lecture.adoc:302"
msgid "== Терминология AOP"
msgstr "== AOP terminology"

#: lecture.adoc:304
msgid ""
"* *Aspect* -- комбинация advices+pointcuts, оформленная в виде отдельного "
"класса. Определяет добавляемую в приложение логику, ответственную за какую-"
"то определённую задачу (например, трассировку)."
msgstr ""
"* *Aspect* -- a combination of advices and pointcuts, defined as a separate "
"class. Defines the logic to add to your app that is responsible for a "
"specific task (such as tracing)."

#: lecture.adoc:306
msgid ""
"* *Weaving* -- процесс «вплетения» кода advices в нужные места кода "
"приложения."
msgstr ""
"* *Weaving* is the process of \"weaving\" the advices code into the right "
"places in the application code."

#: lecture.adoc:308
msgid "* *Target* -- метод, чьё поведение изменяется с помощью AOP."
msgstr "* *Target* -- A method whose behavior is changed using AOP."

#: lecture.adoc:310
msgid "== Как можно реализовать AOP?"
msgstr "== How can AOP be implemented?"

#: lecture.adoc:315
msgid ""
"* Статически: вплетение на уровне исходников или байт-кода.\n"
"* Динамически: создавая прокси и используя вплетение в runtime.\n"
"* Spring использует динамический AOP.\n"
"* *Вопрос*: какие вы видите достоинства и недостатки у того и другого метода?"
msgstr ""
"* Static: weaving at the source or bytecode level.\n"
"* Dynamically: creating a proxy and weaving during the runtime.\n"
"* Spring uses dynamic AOP.\n"
"* *Question*: What are the advantages and disadvantages of both methods?"

#: lecture.adoc:317
msgid "== Прокси-объект: реализация"
msgstr "== Proxy Object: Implementation"

#: lecture.adoc:324
msgid ""
"[graphviz,\"proxy.png\"]\n"
"----\n"
"digraph G {\n"
"  graph [ dpi = 200 ];\n"
"  compound=true;\n"
"  rankdir=\"LR\";"
msgstr ""
"[graphviz,\"proxy.png\"]\n"
"----\n"
"digraph G {\n"
"  graph [ dpi = 200 ];\n"
"  compound=true;\n"
"  rankdir=\"LR\";"

#: lecture.adoc:326
msgid "  splines=\"line\";"
msgstr "  splines=\"line\";"

#: lecture.adoc:330
msgid ""
"  caller [shape=\"rectangle\", style=rounded];\n"
"  caller -> inv[lhead=cluster0;label=\"       \"];\n"
"  caller -> inv[arrowhead=none];"
msgstr ""
"  caller [shape=\"rectangle\", style=rounded];\n"
"  caller -> inv[lhead=cluster0;label=\"       \"];\n"
"  caller -> inv[arrowhead=none];"

#: lecture.adoc:333
msgid "  subgraph cluster0 {"
msgstr "  subgraph cluster0 {"

#: lecture.adoc:336
msgid ""
"    inv[style=invis, shape=point];\n"
"    target[shape=\"rectangle\", style=\"rounded\";]"
msgstr ""
"    inv[style=invis, shape=point];\n"
"    target[shape=\"rectangle\", style=\"rounded\";]"

#: lecture.adoc:339
msgid ""
"    label=\"proxy\";\n"
"    style=\"dashed,rounded\";"
msgstr ""
"    label=\"proxy\";\n"
"    style=\"dashed,rounded\";"

#: lecture.adoc:344
msgid ""
"    inv -> target[style=dashed;];\n"
"  }\n"
"}\n"
"----"
msgstr ""
"    inv -> target[style=dashed;];\n"
"  }\n"
"}\n"
"----"

#: lecture.adoc:348
msgid ""
"* Создаётся по необходимости.\n"
"* Перехватывает вызовы всех методов на target.\n"
"* Проверяет, не сработал ли pointcut -- и вызывает advice."
msgstr ""
"* Created as needed.\n"
"* Intercepts calls to all methods on target.\n"
"* Checks if the pointcut has not worked -- and invokes advice."

#: lecture.adoc:350
msgid "== Использование AOP в Spring"
msgstr "== Using AOP in Spring"

#: lecture.adoc:352
msgid ""
"Для активизации `BeanPostProcessor`-а, сканирующего AOP-аннотации, надо в "
"конфигурации включить аннотацию `@EnableAspectJAutoProxy`"
msgstr ""
"To activate a `BeanPostProcessor` that scans AOP annotations, you need to "
"include the `@EnableAspectJAutoProxy` annotation in the configuration"

#: lecture.adoc:359
msgid ""
"[source,java]\n"
"----\n"
"@Configuration\n"
"@EnableAspectJAutoProxy\n"
"public class AppConfig{\n"
"  ..."
msgstr ""
"[source,java]\n"
"----\n"
"@Configuration\n"
"@EnableAspectJAutoProxy\n"
"public class AppConfig{\n"
"  ..."

#: lecture.adoc:362
msgctxt "lecture.adoc:362"
msgid ""
"}\n"
"----"
msgstr ""
"}\n"
"----"

#: lecture.adoc:364
msgid ""
"(что такое `BeanPostProcessor` -- мы увидим в дальнейшем, но вы уже знаете, "
"что это конфигуратор объекта)"
msgstr ""
"(what is `BeanPostProcessor` -- we'll see later, but you already guess it's "
"an object configurator)"

#: lecture.adoc:366
msgctxt "lecture.adoc:366"
msgid "== Пример аспекта"
msgstr "== Example of an aspect"

#: lecture.adoc:385
msgctxt "lecture.adoc:385"
msgid ""
"[source,java]\n"
"----\n"
"@Component @Aspect\n"
"public class BenchmarkAspect {\n"
"  @Around(\"@annotation(Benchmark)\")\n"
"    //pointcut expression ^^^\n"
"  public Object execEntryPoint(ProceedingJoinPoint joinPoint) \n"
"                                    throws Throwable {\n"
"    System.out.printf(\"[[[BENCHMARK method %s%n\",\n"
"                   joinPoint.getSignature().getName());\n"
"    long start = System.nanoTime();\n"
"    Object retVal = joinPoint.proceed();\n"
"    long end = System.nanoTime();\n"
"    System.out.printf(\"Time: %dns]]]%n\", end - start);\n"
"    return retVal;\n"
"  }\n"
"}\n"
"----"
msgstr ""
"[source,java]\n"
"----\n"
"@Component @Aspect\n"
"public class BenchmarkAspect {\n"
"  @Around(\"@annotation(Benchmark)\")\n"
"    //pointcut expression ^^^\n"
"  public Object execEntryPoint(ProceedingJoinPoint joinPoint) \n"
"                                    throws Throwable {\n"
"    System.out.printf(\"[[[BENCHMARK method %s%n\",\n"
"                   joinPoint.getSignature().getName());\n"
"    long start = System.nanoTime();\n"
"    Object retVal = joinPoint.proceed();\n"
"    long end = System.nanoTime();\n"
"    System.out.printf(\"Time: %dns]]]%n\", end - start);\n"
"    return retVal;\n"
"  }\n"
"}\n"
"----"

#: lecture.adoc:387
msgctxt "lecture.adoc:387"
msgid "== Spring AOP checklist"
msgstr "== Spring AOP checklist"

#: lecture.adoc:392
msgid ""
"* `@EnableAspectJAutoProxy` над конфигурацией.\n"
"* `@Aspect` над аспектом.\n"
"* `@Component` / `@Bean` для аспекта, и сам аспект должен входить в "
"конфигурацию приложения.\n"
"* Аспект не перехватывает методы, которые вызываются `@PostConstruct`-ом. "
"*Вопрос*: почему?"
msgstr ""
"* `@EnableAspectJAutoProxy` over the configuration.\n"
"* `@Aspect` over the aspect.\n"
"* `@Component` / `@Bean` for the aspect, and the aspect itself must be "
"included in the application configuration.\n"
"* The aspect does not intercept methods that are called by the "
"`@PostConstruct`. *Question*: Why?"

#: lecture.adoc:395
msgctxt "lecture.adoc:395"
msgid "== Spring AOP checklist"
msgstr "== Spring AOP checklist"

#: lecture.adoc:400
msgid ""
"* `@EnableAspectJAutoProxy` над конфигурацией.\n"
"* `@Aspect` над аспектом.\n"
"* `@Component` / `@Bean` для аспекта, и сам аспект должен входить в "
"конфигурацию приложения.\n"
"* Аспект не перехватывает методы, которые вызываются `@PostConstruct`-ом."
msgstr ""
"* `@EnableAspectJAutoProxy` over the configuration.\n"
"* `@Aspect` over the aspect.\n"
"* `@Component` / `@Bean` for the aspect, and the aspect itself must be "
"included in the application configuration.\n"
"* The aspect does not intercept methods that are called by the "
"`@PostConstruct`."

#: lecture.adoc:402
msgctxt "lecture.adoc:402"
msgid "== Пример аспекта"
msgstr "== Example of an aspect"

#: lecture.adoc:421
msgctxt "lecture.adoc:421"
msgid ""
"[source,java]\n"
"----\n"
"@Component @Aspect\n"
"public class BenchmarkAspect {\n"
"  @Around(\"@annotation(Benchmark)\")\n"
"    //pointcut expression ^^^\n"
"  public Object execEntryPoint(ProceedingJoinPoint joinPoint) \n"
"                                    throws Throwable {\n"
"    System.out.printf(\"[[[BENCHMARK method %s%n\",\n"
"                   joinPoint.getSignature().getName());\n"
"    long start = System.nanoTime();\n"
"    Object retVal = joinPoint.proceed();\n"
"    long end = System.nanoTime();\n"
"    System.out.printf(\"Time: %dns]]]%n\", end - start);\n"
"    return retVal;\n"
"  }\n"
"}\n"
"----"
msgstr ""
"[source,java]\n"
"----\n"
"@Component @Aspect\n"
"public class BenchmarkAspect {\n"
"  @Around(\"@annotation(Benchmark)\")\n"
"    //pointcut expression ^^^\n"
"  public Object execEntryPoint(ProceedingJoinPoint joinPoint) \n"
"                                    throws Throwable {\n"
"    System.out.printf(\"[[[BENCHMARK method %s%n\",\n"
"                   joinPoint.getSignature().getName());\n"
"    long start = System.nanoTime();\n"
"    Object retVal = joinPoint.proceed();\n"
"    long end = System.nanoTime();\n"
"    System.out.printf(\"Time: %dns]]]%n\", end - start);\n"
"    return retVal;\n"
"  }\n"
"}\n"
"----"

#: lecture.adoc:423
msgid "== Какие бывают advices"
msgstr "== What kinds of the advices are there"

#: lecture.adoc:429
msgid ""
"* `@Before`\n"
"* `@AfterReturning` (нормальное завершение)\n"
"* `@AfterThrowing` (exception)\n"
"* `@After` (нормальное завершение и exception)\n"
"* `@Around`"
msgstr ""
"* `@Before`\n"
"* `@AfterReturning` (normal completion)\n"
"* `@AfterThrowing` (exception)\n"
"* `@After` (normal completion and exception)\n"
"* `@Around`"

#: lecture.adoc:439
msgid ""
"== `@Before`\n"
"[source,java]\n"
"----\n"
"@Before(\"@annotation(Benchmark)\")\n"
"public void beforeFooMethods(JoinPoint jp) {\n"
"  String methodName = jp.getSignature().getName();\n"
"  System.out.println(methodName);\n"
"}\n"
"----"
msgstr ""
"== `@Before`\n"
"[source,java]\n"
"----\n"
"@Before(\"@annotation(Benchmark)\")\n"
"public void beforeFooMethods(JoinPoint jp) {\n"
"  String methodName = jp.getSignature().getName();\n"
"  System.out.println(methodName);\n"
"}\n"
"----"

#: lecture.adoc:441
msgid "== `@After`"
msgstr "== `@After`"

#: lecture.adoc:449
msgid ""
"[source,java]\n"
"----\n"
"@AfterReturning(pointcut= \"execution(* edu.phystech..*.foo())\",\n"
"                returning = \"retVal\")\n"
"public void afterFoo(Double retVal) {\n"
"  System.out.println(\"AFTER foo()\" + retVal);\n"
"}"
msgstr ""
"[source,java]\n"
"----\n"
"@AfterReturning(pointcut= \"execution(* edu.phystech..*.foo())\",\n"
"                returning = \"retVal\")\n"
"public void afterFoo(Double retVal) {\n"
"  System.out.println(\"AFTER foo()\" + retVal);\n"
"}"

#: lecture.adoc:457
msgid ""
"@AfterThrowing(\n"
"    pointcut= \"execution(* aop.example.application..*.*(..))\", \n"
"    throwing = \"ex\")\n"
"public void dbException(DatabaseRuntimeException ex){\n"
"  System.out.println(ex);\n"
"}\n"
"----"
msgstr ""
"@AfterThrowing(\n"
"    pointcut= \"execution(* aop.example.application..*.*(..))\", \n"
"    throwing = \"ex\")\n"
"public void dbException(DatabaseRuntimeException ex){\n"
"  System.out.println(ex);\n"
"}\n"
"----"

#: lecture.adoc:460
msgid "== BeanPostProcessor interface"
msgstr "== BeanPostProcessor interface"

#: lecture.adoc:469
msgid ""
"[source,java]\n"
"----\n"
"public interface BeanPostProcessor {\n"
"  //впрыскиваем в бин значения\n"
"  default Object postProcessBeforeInitialization(\n"
"    Object bean, String beanName) throws BeansException {\n"
"\t\treturn bean;\n"
"  }"
msgstr ""
"[source,java]\n"
"----\n"
"public interface BeanPostProcessor {\n"
"  //inject values into bean\n"
"  default Object postProcessBeforeInitialization(\n"
"    Object bean, String beanName) throws BeansException {\n"
"\t\treturn bean;\n"
"  }"

#: lecture.adoc:477
msgid ""
"  //возвращаем обёртку над бином\n"
"  default Object postProcessAfterInitialization(\n"
"    Object bean, String beanName) throws BeansException {\n"
"\t\treturn bean;\n"
"  }\n"
"}\n"
"----"
msgstr ""
"  //return the the bean's wrapper\n"
"  default Object postProcessAfterInitialization(\n"
"    Object bean, String beanName) throws BeansException {\n"
"\t\treturn bean;\n"
"  }\n"
"}\n"
"----"

#: lecture.adoc:479
msgid "== BeanPostProcessor"
msgstr "== BeanPostProcessor"

#: lecture.adoc:488
msgid ""
"[graphviz,\"bpp.png\"]\n"
"----\n"
"digraph G {\n"
"graph [ dpi = 160 ];\n"
"rankdir=\"LR\";\n"
"compound=true;\n"
"node[shape=box];\n"
"Constructor -> configurer1;"
msgstr ""
"[graphviz,\"bpp.png\"]\n"
"----\n"
"digraph G {\n"
"graph [ dpi = 160 ];\n"
"rankdir=\"LR\";\n"
"compound=true;\n"
"node[shape=box];\n"
"Constructor -> configurer1;"

#: lecture.adoc:496
msgid ""
"subgraph cluster_1 {\n"
"  label = \"BeanPostProcessor#\\npostProcessBeforeInitialization\";\n"
"  style=\"filled\";\n"
"  color=\"#ffffcc\";\n"
"  configurer2 -> configurer1 [dir=\"back\"];\n"
"  {rank=same configurer1 configurer2}\n"
"}"
msgstr ""
"subgraph cluster_1 {\n"
"  label = \"BeanPostProcessor#\\npostProcessBeforeInitialization\";\n"
"  style=\"filled\";\n"
"  color=\"#ffffcc\";\n"
"  configurer2 -> configurer1 [dir=\"back\"];\n"
"  {rank=same configurer1 configurer2}\n"
"}"

#: lecture.adoc:503
msgid ""
"subgraph cluster_2{\n"
"  label=\"Initialization\";\n"
"  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
"  {rank=same   postConstruct1 postConstruct2}\n"
"}\n"
"configurer2 -> postConstruct1;"
msgstr ""
"subgraph cluster_2{\n"
"  label=\"Initialization\";\n"
"  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
"  {rank=same   postConstruct1 postConstruct2}\n"
"}\n"
"configurer2 -> postConstruct1;"

#: lecture.adoc:513
msgid ""
"subgraph cluster_3 {\n"
"  label = \"BeanPostProcessor#\\npostProcessAfterInitialization\";\n"
"  style=\"filled\";\n"
"  color=\"#ffffcc\";\n"
"  proxyconfigurer2 -> proxyconfigurer1  [dir=\"back\"];\n"
"  {rank=same proxyconfigurer2 proxyconfigurer1}\n"
"} \n"
"postConstruct2 -> proxyconfigurer1;"
msgstr ""
"subgraph cluster_3 {\n"
"  label = \"BeanPostProcessor#\\npostProcessAfterInitialization\";\n"
"  style=\"filled\";\n"
"  color=\"#ffffcc\";\n"
"  proxyconfigurer2 -> proxyconfigurer1  [dir=\"back\"];\n"
"  {rank=same proxyconfigurer2 proxyconfigurer1}\n"
"} \n"
"postConstruct2 -> proxyconfigurer1;"

#: lecture.adoc:515
msgid "subgraph cluster_4 {"
msgstr "subgraph cluster_4 {"

#: lecture.adoc:520
msgid ""
"  label = \"PreDestroy\";\n"
"  preDestroy2 -> preDestroy1  [dir=\"back\"];\n"
"  {rank=same preDestroy1 preDestroy2}\n"
"} "
msgstr ""
"  label = \"PreDestroy\";\n"
"  preDestroy2 -> preDestroy1  [dir=\"back\"];\n"
"  {rank=same preDestroy1 preDestroy2}\n"
"} "

#: lecture.adoc:522
msgctxt "lecture.adoc:522"
msgid "proxyconfigurer2 -> preDestroy1;"
msgstr "proxyconfigurer2 -> preDestroy1;"

#: lecture.adoc:525
msgctxt "lecture.adoc:525"
msgid ""
"}\n"
"----"
msgstr ""
"}\n"
"----"

#: lecture.adoc:527
msgid "== Собственный BeanPostProcessor"
msgstr "== Own BeanPostProcessor"

#: lecture.adoc:548
msgid ""
"[source,java]\n"
"----\n"
"@Component public class InjectRandomIntAnnotationBeanPostProcessor\n"
"                                    implements BeanPostProcessor {\n"
"  @Override public Object postProcessBeforeInitialization(\n"
"             Object bean, String beanName) throws BeansException {\n"
"    for (Field f : ReflectionUtils.getAllFields(bean.getClass())) {\n"
"      InjectRandomInt ann = f.getAnnotation(InjectRandomInt.class);\n"
"      if (ann != null) {\n"
"        int value = ThreadLocalRandom.current()\n"
"                        .nextInt(ann.min(), ann.max() + 1);\n"
"        f.setAccessible(true);\n"
"        try { f.set(bean, value); } \n"
"        catch (IllegalAccessException e) {\n"
"          throw new NotWritablePropertyException(\n"
"                                bean.getClass(), f.getName()); }\n"
"    } }\n"
"    return bean;\n"
"} }\n"
"----"
msgstr ""
"[source,java]\n"
"----\n"
"@Component public class InjectRandomIntAnnotationBeanPostProcessor\n"
"                                    implements BeanPostProcessor {\n"
"  @Override public Object postProcessBeforeInitialization(\n"
"             Object bean, String beanName) throws BeansException {\n"
"    for (Field f : ReflectionUtils.getAllFields(bean.getClass())) {\n"
"      InjectRandomInt ann = f.getAnnotation(InjectRandomInt.class);\n"
"      if (ann != null) {\n"
"        int value = ThreadLocalRandom.current()\n"
"                        .nextInt(ann.min(), ann.max() + 1);\n"
"        f.setAccessible(true);\n"
"        try { f.set(bean, value); } \n"
"        catch (IllegalAccessException e) {\n"
"          throw new NotWritablePropertyException(\n"
"                                bean.getClass(), f.getName()); }\n"
"    } }\n"
"    return bean;\n"
"} }\n"
"----"

#: lecture.adoc:550
msgctxt "lecture.adoc:550"
msgid "== Демо"
msgstr "== Demo"

#: lecture.adoc:556
msgid ""
"* AnnotationConfigApplicationContext\n"
"* DI\n"
"* AOP\n"
"* BeanPostProcessor\n"
"* Test with ContextConfiguration"
msgstr ""
"* AnnotationConfigApplicationContext\n"
"* DI\n"
"* AOP\n"
"* BeanPostProcessor\n"
"* Test with ContextConfiguration"

#: lecture.adoc:558
msgctxt "lecture.adoc:558"
msgid "== Spring Boot"
msgstr "== Spring Boot"

#: lecture.adoc:560
msgid "image::spring-boot-logo.jpg[]"
msgstr "image::spring-boot-logo.jpg[]"

#: lecture.adoc:562
msgctxt "lecture.adoc:562"
msgid "== Spring Boot"
msgstr "== Spring Boot"

#: lecture.adoc:568
msgid ""
"* Convention over configuration\n"
"* Подключение готовых сконфигурированных блоков через «стартеры»\n"
"* Включая встроенный Tomcat или Jetty (что инвертировало старую модель)\n"
"* Метрики, health checks, настройка приложения через конфигурационный файл\n"
"* Всё на аннотациях"
msgstr ""
"* Convention over configuration\n"
"* Connection of ready-made configured modules via \"starters\"\n"
"* Including built-in Tomcat or Jetty (which inverted the old model)\n"
"* Metrics, health checks, application configuration via configuration file\n"
"* Everything is annotations-based"

#: lecture.adoc:571
msgid "== Dependency Management"
msgstr "== Dependency Management"

#: lecture.adoc:581
msgid ""
"[source,xml]\n"
"----\n"
"<parent>\n"
"    <groupId>org.springframework.boot</groupId>\n"
"    <artifactId>spring-boot-starter-parent</artifactId>\n"
"    <!-- ...to spring-boot-dependencies, 3356 LOC -->\n"
"    <version>2.2.1.RELEASE</version>\n"
"</parent>\n"
"----"
msgstr ""
"[source,xml]\n"
"----\n"
"<parent>\n"
"    <groupId>org.springframework.boot</groupId>\n"
"    <artifactId>spring-boot-starter-parent</artifactId>\n"
"    <!-- ...to spring-boot-dependencies, 3356 LOC -->\n"
"    <version>2.2.1.RELEASE</version>\n"
"</parent>\n"
"----"

#: lecture.adoc:583
msgid "== Подключаем стартеры"
msgstr "== Connect the starters"

#: lecture.adoc:593
msgid ""
"[source,xml]\n"
"----\n"
"<!-- «Мы хотим веб-сервис»-->\n"
"<dependency>\n"
"    <groupId>org.springframework.boot</groupId>\n"
"    <artifactId>spring-boot-starter-web</artifactId>\n"
"    <!-- А почему не указываем версию?-->\n"
"</dependency>\n"
"----"
msgstr ""
"[source,xml]\n"
"----\n"
"<!-- «We want a web service»-->\n"
"<dependency>\n"
"    <groupId>org.springframework.boot</groupId>\n"
"    <artifactId>spring-boot-starter-web</artifactId>\n"
"    <!-- And why don't we specify the version?-->\n"
"</dependency>\n"
"----"

#: lecture.adoc:595
msgid "== Пишем Main-класс"
msgstr "== Writing Main class"

#: lecture.adoc:608
msgid ""
"[source,java]\n"
"----\n"
"//Пакеты не указываем\n"
"@SpringBootApplication\n"
"public class Main {\n"
"    public static void main(String[] args) throws SQLException, IOException "
"{\n"
"        /*Метод run возвращает ApplicationContext,\n"
"        но он нам не нужен :-)*/\n"
"        SpringApplication.run(Main.class, args);\n"
"    }\n"
"}\n"
"----"
msgstr ""
"[source,java]\n"
"----\n"
"//We do not specify packages for scanning\n"
"@SpringBootApplication\n"
"public class Main {\n"
"    public static void main(String[] args) throws SQLException, IOException "
"{\n"
"        /*run method returns ApplicationContext,\n"
"        but we don't need it:-)*/\n"
"        SpringApplication.run(Main.class, args);\n"
"    }\n"
"}\n"
"----"

#: lecture.adoc:610
msgid "== Пишем контроллер"
msgstr "== Writing a controller"

#: lecture.adoc:622
msgid ""
"[source,java]\n"
"----\n"
"//Это тоже @Controller, а значит, bean\n"
"@RestController\n"
"public class HelloController {\n"
"    @GetMapping(\"/hello\")\n"
"    public String sayHello(@RequestParam(\"name\") String name) {\n"
"        return String.format(\"Hello, %s!\", name);\n"
"    }\n"
"}\n"
"----"
msgstr ""
"[source,java]\n"
"----\n"
"//It's also a @Controller, and hence it's a bean\n"
"@RestController\n"
"public class HelloController {\n"
"    @GetMapping(\"/hello\")\n"
"    public String sayHello(@RequestParam(\"name\") String name) {\n"
"        return String.format(\"Hello, %s!\", name);\n"
"    }\n"
"}\n"
"----"

#: lecture.adoc:624
msgid "== За сборку jar-ника отвечает spring-boot-maven-plugin"
msgstr "== Spring-boot-maven-plugin is responsible for building the jar file"

#: lecture.adoc:632
msgid ""
"[source,xml]\n"
"----\n"
"<plugin>\n"
"    <groupId>org.springframework.boot</groupId>\n"
"    <artifactId>spring-boot-maven-plugin</artifactId>\n"
"</plugin>\n"
"----"
msgstr ""
"[source,xml]\n"
"----\n"
"<plugin>\n"
"    <groupId>org.springframework.boot</groupId>\n"
"    <artifactId>spring-boot-maven-plugin</artifactId>\n"
"</plugin>\n"
"----"

#: lecture.adoc:635
msgid ""
"* Получается «жирный» executable jar.\n"
"* Можно сделать так, что он будет в буквальном смысле executable."
msgstr ""
"* It turns out to be a \"fat\" executable jar.\n"
"* You can make it literally executable."

#: lecture.adoc:637
msgid "== Как Spring Boot Starter поднимает свои бины?"
msgstr "== How does Spring Boot Starter finds its beans?"

#: lecture.adoc:639
msgid ""
"* Spring Boot сканирует файловую систему ClassPath на наличие файлов `spring."
"factories`."
msgstr ""
"* Spring Boot scans the ClassPath file system for `spring.factories` files."

#: lecture.adoc:641
msgid "image::spring-factories.png[{image-100-width}]"
msgstr "image::spring-factories.png[{image-100-width}]"

#: lecture.adoc:643
msgctxt "lecture.adoc:643"
msgid "== Демо"
msgstr "== Demo"

#: lecture.adoc:647
msgid ""
"* Spring Boot\n"
"* Spring JDBC Template\n"
"* Spring Boot Test"
msgstr ""
"* Spring Boot\n"
"* Spring JDBC Template\n"
"* Spring Boot Test"

#: lecture.adoc:649
msgid "== Пришла пора закругляться :-)"
msgstr "== It's time to round off :-)"

#: lecture.adoc:656
msgid ""
"* Всё, что я рассказал в этом курсе -- уже Legacy.\n"
"* Мы работали на Java 17 (LTS), но...\n"
"** март 2022 -- Java 18,\n"
"** сентябрь 2022 -- Java 19,\n"
"** март 2023 -- Java 20,\n"
"** сентябрь 2023 -- Java 21 (новый LTS)."
msgstr ""
"* Everything I've covered in this course is legacy already.\n"
"* We worked on Java 17 (LTS), but...\n"
"** March 2022 -- Java 18,\n"
"** September 2022 -- Java 19,\n"
"** March 2023 -- Java 20,\n"
"** September 2023 -- Java 21 (next LTS)."

#: lecture.adoc:658
msgid "== Синтаксис Java развивается"
msgstr "== Java syntax is evolving"

#: lecture.adoc:664
msgid ""
"** Modularization (Java 9+)\n"
"** Type Inference (Java 10+)\n"
"** Switch Expressions (Java 12+)\n"
"** Multiline Strings (Java 13+)\n"
"** Records (Java 14+)"
msgstr ""
"** Modularization (Java 9+)\n"
"** Type Inference (Java 10+)\n"
"** Switch Expressions (Java 12+)\n"
"** Multiline Strings (Java 13+)\n"
"** Records (Java 14+)"

#: lecture.adoc:666
msgid "== Все ждут проектов"
msgstr "== Everyone is waiting for projects"

#: lecture.adoc:669
msgid ""
"* Valhalla\n"
"* Loom"
msgstr ""
"* Valhalla\n"
"* Loom"

#: lecture.adoc:671
msgid "== «Вселенная Java» расширяется со скоростью света"
msgstr "== \"Java Universe\" is expanding at the speed of light"

#: lecture.adoc:678
msgid ""
"* Не только Spring:\n"
"** Microframeworks -- for serverless\n"
"* Не только Java language:\n"
"** Groovy\n"
"** Kotlin\n"
"** Scala"
msgstr ""
"* Not only Spring:\n"
"** Microframeworks -- for serverless\n"
"* Not only Java language:\n"
"** Groovy\n"
"** Kotlin\n"
"** Scala"

#: lecture.adoc:680
msgid "== Выводы — напутствия"
msgstr "== Conclusions — parting words"

#: lecture.adoc:682
msgid "== Никогда не переставайте изучать новое"
msgstr "== Never stop learning new things"

#: lecture.adoc:684
msgid ""
"_\"Here, you see, it takes all the running you can do, to keep in the same "
"place. If you want to get somewhere else, you must run at least twice as "
"fast as that!”_"
msgstr ""
"_\"Here, you see, it takes all the running you can do, to keep in the same "
"place. If you want to get somewhere else, you must run at least twice as "
"fast as that!”_"

#: lecture.adoc:686
msgid "image::alice_queen.jpg[{image-40-width}]"
msgstr "image::alice_queen.jpg[{image-40-width}]"

#: lecture.adoc:688
msgid "== Старое тоже полезно изучать"
msgstr "== The old is also useful to learn"

#: lecture.adoc:700
msgid ""
"[cols=\"25a,25a,25a,25a\"]\n"
"|===\n"
"|\n"
"image::horstmann.jpg[]\n"
"|\n"
"image::bloch.jpg[]\n"
"|\n"
"image::goetz.jpg[]\n"
"|\n"
"image::urma.jpg[]\n"
"|==="
msgstr ""
"[cols=\"25a,25a,25a,25a\"]\n"
"|===\n"
"|\n"
"image::horstmann.jpg[]\n"
"|\n"
"image::bloch.jpg[]\n"
"|\n"
"image::goetz.jpg[]\n"
"|\n"
"image::urma.jpg[]\n"
"|==="

#: lecture.adoc:702
msgid "== Помните про свою профессиональную ответственность"
msgstr "== Remember about your professional responsibility"

#: lecture.adoc:710
msgid ""
"* От работы программистов в XXI веке зависят судьбы людей\n"
"* Даже если это не программа, управляющая самолётом или аппаратом ИВЛ\n"
"* Помните про:\n"
"** *Security*\n"
"** *Privacy*\n"
"** *Accessibility*\n"
"* Делайте мир лучше!"
msgstr ""
"* The fate of people depends on the work of programmers in the XXI century\n"
"* Even if it is not a program that controls an airplane or lung ventilator\n"
"* Remember about:\n"
"** *Security*\n"
"** *Privacy*\n"
"** *Accessibility*\n"
"* Make the world a better place!"

#: lecture.adoc:715
msgid ""
"== Становитесь частью community!\n"
"* JUGs: Москва, Санкт-Петербург, Новосибирск.\n"
"* Conferences: Joker, JPoint, SnowOne.\n"
"* Когда это всё закончится, приходите на московский JUG!"
msgstr ""
"== Become a part of the community!\n"
"* JUGs: Moscow, St. Petersburg, Novosibirsk.\n"
"* Conferences: Joker, JPoint, SnowOne.\n"
"* When it's all over, come to moscow's JUG!"

#: lecture.adoc:717
msgid "image::jugmsk.jpg[]"
msgstr "image::jugmsk.jpg[]"

#: lecture.adoc:720
msgid "== Добро пожаловать во вселенную Java :-)"
msgstr "== Welcome to the Java universe :-)"

#: lecture.adoc:721
msgid "image::duke.svg[{image-20-width}]"
msgstr "image::duke.svg[{image-20-width}]"

#~ msgid ""
#~ "//== Часть 1. Введение\n"
#~ ":!figure-caption:"
#~ msgstr ""
#~ "//== Часть 1. Введение\n"
#~ ":!figure-caption:"

#~ msgctxt "lecture.adoc:237"
#~ msgid ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2}\n"
#~ "}"
#~ msgstr ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2}\n"
#~ "}"

#~ msgctxt "lecture.adoc:268"
#~ msgid "== Финализация"
#~ msgstr "== Finalization"

#~ msgctxt "lecture.adoc:303"
#~ msgid "== Терминология AOP"
#~ msgstr "== AOP terminology"

#~ msgctxt "lecture.adoc:363"
#~ msgid ""
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "}\n"
#~ "----"

#~ msgctxt "lecture.adoc:396"
#~ msgid "== Spring AOP checklist"
#~ msgstr "== Spring AOP checklist"

#~ msgctxt "lecture.adoc:403"
#~ msgid "== Пример аспекта"
#~ msgstr "== Example of an aspect"

#~ msgctxt "lecture.adoc:422"
#~ msgid ""
#~ "[source,java]\n"
#~ "----\n"
#~ "@Component @Aspect\n"
#~ "public class BenchmarkAspect {\n"
#~ "  @Around(\"@annotation(Benchmark)\")\n"
#~ "    //pointcut expression ^^^\n"
#~ "  public Object execEntryPoint(ProceedingJoinPoint joinPoint) \n"
#~ "                                    throws Throwable {\n"
#~ "    System.out.printf(\"[[[BENCHMARK method %s%n\",\n"
#~ "                   joinPoint.getSignature().getName());\n"
#~ "    long start = System.nanoTime();\n"
#~ "    Object retVal = joinPoint.proceed();\n"
#~ "    long end = System.nanoTime();\n"
#~ "    System.out.printf(\"Time: %dns]]]%n\", end - start);\n"
#~ "    return retVal;\n"
#~ "  }\n"
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "[source,java]\n"
#~ "----\n"
#~ "@Component @Aspect\n"
#~ "public class BenchmarkAspect {\n"
#~ "  @Around(\"@annotation(Benchmark)\")\n"
#~ "    //pointcut expression ^^^\n"
#~ "  public Object execEntryPoint(ProceedingJoinPoint joinPoint) \n"
#~ "                                    throws Throwable {\n"
#~ "    System.out.printf(\"[[[BENCHMARK method %s%n\",\n"
#~ "                   joinPoint.getSignature().getName());\n"
#~ "    long start = System.nanoTime();\n"
#~ "    Object retVal = joinPoint.proceed();\n"
#~ "    long end = System.nanoTime();\n"
#~ "    System.out.printf(\"Time: %dns]]]%n\", end - start);\n"
#~ "    return retVal;\n"
#~ "  }\n"
#~ "}\n"
#~ "----"

#~ msgctxt "lecture.adoc:523"
#~ msgid "proxyconfigurer2 -> preDestroy1;"
#~ msgstr "proxyconfigurer2 -> preDestroy1;"

#~ msgctxt "lecture.adoc:526"
#~ msgid ""
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "}\n"
#~ "----"

#~ msgctxt "lecture.adoc:563"
#~ msgid "== Spring Boot"
#~ msgstr "== Spring Boot"

#~ msgctxt "lecture.adoc:644"
#~ msgid "== Демо"
#~ msgstr "== Demo"

#~ msgid "== Жизненный цикл бина (напоминание): configuration"
#~ msgstr "== Bean life cycle (reminder): configuration"

#~ msgid ""
#~ "[graphviz,\"beanlife1.png\"]\n"
#~ "----\n"
#~ "digraph G {\n"
#~ "graph [ dpi = 180 ];\n"
#~ "rankdir=\"LR\";\n"
#~ "node[shape=box];\n"
#~ "Constructor -> configurer1;\n"
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer3 -> configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2 configurer3}\n"
#~ "} \n"
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "[graphviz,\"beanlife1.png\"]\n"
#~ "----\n"
#~ "digraph G {\n"
#~ "graph [ dpi = 180 ];\n"
#~ "rankdir=\"LR\";\n"
#~ "node[shape=box];\n"
#~ "Constructor -> configurer1;\n"
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer3 -> configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2 configurer3}\n"
#~ "} \n"
#~ "}\n"
#~ "----"

#~ msgid "== Жизненный цикл бина (напоминание): initialization"
#~ msgstr "== Bean life cycle (reminder): initialization"

#~ msgid ""
#~ "[graphviz,\"beanlife2.png\"]\n"
#~ "----\n"
#~ "digraph G {\n"
#~ "graph [ dpi = 180 ];\n"
#~ "rankdir=\"LR\";\n"
#~ "node[shape=box];\n"
#~ "Constructor -> configurer1;\n"
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer3 -> configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2 configurer3}\n"
#~ "}\n"
#~ "subgraph cluster_2{\n"
#~ "  label=\"Initialization\";\n"
#~ "  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
#~ "  {rank=same postConstruct1 postConstruct2}\n"
#~ "}\n"
#~ "configurer3 -> postConstruct1;\n"
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "[graphviz,\"beanlife2.png\"]\n"
#~ "----\n"
#~ "digraph G {\n"
#~ "graph [ dpi = 180 ];\n"
#~ "rankdir=\"LR\";\n"
#~ "node[shape=box];\n"
#~ "Constructor -> configurer1;\n"
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer3 -> configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2 configurer3}\n"
#~ "}\n"
#~ "subgraph cluster_2{\n"
#~ "  label=\"Initialization\";\n"
#~ "  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
#~ "  {rank=same postConstruct1 postConstruct2}\n"
#~ "}\n"
#~ "configurer3 -> postConstruct1;\n"
#~ "}\n"
#~ "----"

#~ msgid "== Жизненный цикл бина (напоминание): wrapping"
#~ msgstr "== Bean life cycle (reminder): wrapping"

#~ msgctxt "lecture.adoc:277"
#~ msgid ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2}\n"
#~ "}"
#~ msgstr ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2}\n"
#~ "}"

#~ msgctxt "lecture.adoc:308"
#~ msgid "== Финализация"
#~ msgstr "== Finalization"

#~ msgctxt "lecture.adoc:343"
#~ msgid "== Терминология AOP"
#~ msgstr "== AOP terminology"

#~ msgctxt "lecture.adoc:403"
#~ msgid ""
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "}\n"
#~ "----"

#~ msgctxt "lecture.adoc:436"
#~ msgid "== Spring AOP checklist"
#~ msgstr "== Spring AOP checklist"

#~ msgctxt "lecture.adoc:443"
#~ msgid "== Пример аспекта"
#~ msgstr "== Example of an aspect"

#~ msgctxt "lecture.adoc:462"
#~ msgid ""
#~ "[source,java]\n"
#~ "----\n"
#~ "@Component @Aspect\n"
#~ "public class BenchmarkAspect {\n"
#~ "  @Around(\"@annotation(Benchmark)\")\n"
#~ "    //pointcut expression ^^^\n"
#~ "  public Object execEntryPoint(ProceedingJoinPoint joinPoint) \n"
#~ "                                    throws Throwable {\n"
#~ "    System.out.printf(\"[[[BENCHMARK method %s%n\",\n"
#~ "                   joinPoint.getSignature().getName());\n"
#~ "    long start = System.nanoTime();\n"
#~ "    Object retVal = joinPoint.proceed();\n"
#~ "    long end = System.nanoTime();\n"
#~ "    System.out.printf(\"Time: %dns]]]%n\", end - start);\n"
#~ "    return retVal;\n"
#~ "  }\n"
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "[source,java]\n"
#~ "----\n"
#~ "@Component @Aspect\n"
#~ "public class BenchmarkAspect {\n"
#~ "  @Around(\"@annotation(Benchmark)\")\n"
#~ "    //pointcut expression ^^^\n"
#~ "  public Object execEntryPoint(ProceedingJoinPoint joinPoint) \n"
#~ "                                    throws Throwable {\n"
#~ "    System.out.printf(\"[[[BENCHMARK method %s%n\",\n"
#~ "                   joinPoint.getSignature().getName());\n"
#~ "    long start = System.nanoTime();\n"
#~ "    Object retVal = joinPoint.proceed();\n"
#~ "    long end = System.nanoTime();\n"
#~ "    System.out.printf(\"Time: %dns]]]%n\", end - start);\n"
#~ "    return retVal;\n"
#~ "  }\n"
#~ "}\n"
#~ "----"

#~ msgctxt "lecture.adoc:563"
#~ msgid "proxyconfigurer2 -> preDestroy1;"
#~ msgstr "proxyconfigurer2 -> preDestroy1;"

#~ msgctxt "lecture.adoc:566"
#~ msgid ""
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "}\n"
#~ "----"

#~ msgctxt "lecture.adoc:603"
#~ msgid "== Spring Boot"
#~ msgstr "== Spring Boot"

#~ msgctxt "lecture.adoc:684"
#~ msgid "== Демо"
#~ msgstr "== Demo"

#~ msgid ""
#~ "[graphviz,\"beanlife1.png\"]\n"
#~ "----\n"
#~ "digraph G {\n"
#~ "graph [ dpi = 180 ];\n"
#~ "rankdir=\"LR\";\n"
#~ "node[shape=box];\n"
#~ "Constructor -> configurer1;"
#~ msgstr ""
#~ "[graphviz,\"beanlife1.png\"]\n"
#~ "----\n"
#~ "digraph G {\n"
#~ "graph [ dpi = 180 ];\n"
#~ "rankdir=\"LR\";\n"
#~ "node[shape=box];\n"
#~ "Constructor -> configurer1;"

#~ msgid ""
#~ "[graphviz,\"beanlife2.png\"]\n"
#~ "----\n"
#~ "digraph G {\n"
#~ "graph [ dpi = 180 ];\n"
#~ "rankdir=\"LR\";\n"
#~ "node[shape=box];\n"
#~ "Constructor -> configurer1;"
#~ msgstr ""
#~ "[graphviz,\"beanlife2.png\"]\n"
#~ "----\n"
#~ "digraph G {\n"
#~ "graph [ dpi = 180 ];\n"
#~ "rankdir=\"LR\";\n"
#~ "node[shape=box];\n"
#~ "Constructor -> configurer1;"

#~ msgctxt "lecture.adoc:67"
#~ msgid ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer3 -> configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2 configurer3}\n"
#~ "}"
#~ msgstr ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer3 -> configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2 configurer3}\n"
#~ "} \n"
#~ "}\n"
#~ "----"

#~ msgid ""
#~ "subgraph cluster_2{\n"
#~ "  label=\"Initialization\";\n"
#~ "  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
#~ "  {rank=same postConstruct1 postConstruct2}\n"
#~ "}"
#~ msgstr ""
#~ "subgraph cluster_2{\n"
#~ "  label=\"Initialization\";\n"
#~ "  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
#~ "  {rank=same postConstruct1 postConstruct2}\n"
#~ "}"

#~ msgid ""
#~ "configurer3 -> postConstruct1;\n"
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "configurer3 -> postConstruct1;\n"
#~ "}\n"
#~ "----"

#~ msgctxt "lecture.adoc:79"
#~ msgid "== Жизненный цикл бина (напоминание)"
#~ msgstr "== Bean life cycle (reminder)"

#~ msgid ""
#~ "[graphviz,\"beanlife3.png\"]\n"
#~ "----\n"
#~ "digraph G {\n"
#~ "graph [ dpi = 180 ];\n"
#~ "rankdir=\"LR\";\n"
#~ "node[shape=box];\n"
#~ "Constructor -> configurer1;"
#~ msgstr ""
#~ "[graphviz,\"beanlife3.png\"]\n"
#~ "----\n"
#~ "digraph G {\n"
#~ "graph [ dpi = 180 ];\n"
#~ "rankdir=\"LR\";\n"
#~ "node[shape=box];\n"
#~ "Constructor -> configurer1;"

#~ msgctxt "lecture.adoc:93"
#~ msgid ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer3 -> configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2 configurer3}\n"
#~ "}"
#~ msgstr ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer3 -> configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2 configurer3}\n"
#~ "} \n"
#~ "}\n"
#~ "----"

#~ msgid ""
#~ "subgraph cluster_2{\n"
#~ "  label=\"Initialization\";\n"
#~ "  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
#~ "  {rank=same postConstruct1 postConstruct2}\n"
#~ "}\n"
#~ "configurer3 -> postConstruct1;"
#~ msgstr ""
#~ "subgraph cluster_2{\n"
#~ "  label=\"Initialization\";\n"
#~ "  postConstruct2 -> postConstruct1 [dir=\"back\"];\n"
#~ "  {rank=same postConstruct1 postConstruct2}\n"
#~ "}\n"
#~ "configurer3 -> postConstruct1;"

#~ msgctxt "lecture.adoc:287"
#~ msgid ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2}\n"
#~ "}"
#~ msgstr ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2}\n"
#~ "}"

#~ msgctxt "lecture.adoc:298"
#~ msgid ""
#~ "subgraph cluster_3 {\n"
#~ "  label = \"Wrapping\";"
#~ msgstr ""
#~ "subgraph cluster_3 {\n"
#~ "  label = \"Wrapping\";"

#~ msgctxt "lecture.adoc:303"
#~ msgid ""
#~ "  proxyconfigurer2 -> proxyconfigurer1  [dir=\"back\"];\n"
#~ "  {rank=same proxyconfigurer2 proxyconfigurer1}\n"
#~ "} \n"
#~ "postConstruct2 -> proxyconfigurer1;"
#~ msgstr ""
#~ "  proxyconfigurer2 -> proxyconfigurer1  [dir=\"back\"];\n"
#~ "  {rank=same proxyconfigurer2 proxyconfigurer1}\n"
#~ "} \n"
#~ "postConstruct2 -> proxyconfigurer1;"

#~ msgctxt "lecture.adoc:316"
#~ msgid ""
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "}\n"
#~ "----"

#~ msgctxt "lecture.adoc:318"
#~ msgid "== Финализация"
#~ msgstr "== Finalization"

#~ msgctxt "lecture.adoc:353"
#~ msgid "== Терминология AOP"
#~ msgstr "== AOP terminology"

#~ msgctxt "lecture.adoc:413"
#~ msgid ""
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "}\n"
#~ "----"

#~ msgctxt "lecture.adoc:446"
#~ msgid "== Spring AOP checklist"
#~ msgstr "== Spring AOP checklist"

#~ msgctxt "lecture.adoc:453"
#~ msgid "== Пример аспекта"
#~ msgstr "== Example of an aspect"

#~ msgctxt "lecture.adoc:472"
#~ msgid ""
#~ "[source,java]\n"
#~ "----\n"
#~ "@Component @Aspect\n"
#~ "public class BenchmarkAspect {\n"
#~ "  @Around(\"@annotation(Benchmark)\")\n"
#~ "    //pointcut expression ^^^\n"
#~ "  public Object execEntryPoint(ProceedingJoinPoint joinPoint) \n"
#~ "                                    throws Throwable {\n"
#~ "    System.out.printf(\"[[[BENCHMARK method %s%n\",\n"
#~ "                   joinPoint.getSignature().getName());\n"
#~ "    long start = System.nanoTime();\n"
#~ "    Object retVal = joinPoint.proceed();\n"
#~ "    long end = System.nanoTime();\n"
#~ "    System.out.printf(\"Time: %dns]]]%n\", end - start);\n"
#~ "    return retVal;\n"
#~ "  }\n"
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "[source,java]\n"
#~ "----\n"
#~ "@Component @Aspect\n"
#~ "public class BenchmarkAspect {\n"
#~ "  @Around(\"@annotation(Benchmark)\")\n"
#~ "    //pointcut expression ^^^\n"
#~ "  public Object execEntryPoint(ProceedingJoinPoint joinPoint) \n"
#~ "                                    throws Throwable {\n"
#~ "    System.out.printf(\"[[[BENCHMARK method %s%n\",\n"
#~ "                   joinPoint.getSignature().getName());\n"
#~ "    long start = System.nanoTime();\n"
#~ "    Object retVal = joinPoint.proceed();\n"
#~ "    long end = System.nanoTime();\n"
#~ "    System.out.printf(\"Time: %dns]]]%n\", end - start);\n"
#~ "    return retVal;\n"
#~ "  }\n"
#~ "}\n"
#~ "----"

#~ msgctxt "lecture.adoc:573"
#~ msgid "proxyconfigurer2 -> preDestroy1;"
#~ msgstr "proxyconfigurer2 -> preDestroy1;"

#~ msgctxt "lecture.adoc:576"
#~ msgid ""
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "}\n"
#~ "----"

#~ msgctxt "lecture.adoc:613"
#~ msgid "== Spring Boot"
#~ msgstr "== Spring Boot"

#~ msgctxt "lecture.adoc:694"
#~ msgid "== Демо"
#~ msgstr "== Demo"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:53"
#~ msgid "== Жизненный цикл бина (напоминание)"
#~ msgstr "== Жизненный цикл бина (напоминание)"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:79"
#~ msgid "== Жизненный цикл бина (напоминание)"
#~ msgstr "== Жизненный цикл бина (напоминание)"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:93"
#~ msgid ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer3 -> configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2 configurer3}\n"
#~ "}"
#~ msgstr ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer3 -> configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2 configurer3}\n"
#~ "}"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:287"
#~ msgid ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2}\n"
#~ "}"
#~ msgstr ""
#~ "subgraph cluster_1 {\n"
#~ "  label = \"Configuration\";\n"
#~ "  configurer2 -> configurer1 [dir=\"back\"];\n"
#~ "  {rank=same configurer1 configurer2}\n"
#~ "}"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:298"
#~ msgid ""
#~ "subgraph cluster_3 {\n"
#~ "  label = \"Wrapping\";"
#~ msgstr ""
#~ "subgraph cluster_3 {\n"
#~ "  label = \"Wrapping\";"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:303"
#~ msgid ""
#~ "  proxyconfigurer2 -> proxyconfigurer1  [dir=\"back\"];\n"
#~ "  {rank=same proxyconfigurer2 proxyconfigurer1}\n"
#~ "} \n"
#~ "postConstruct2 -> proxyconfigurer1;"
#~ msgstr ""
#~ "  proxyconfigurer2 -> proxyconfigurer1  [dir=\"back\"];\n"
#~ "  {rank=same proxyconfigurer2 proxyconfigurer1}\n"
#~ "} \n"
#~ "postConstruct2 -> proxyconfigurer1;"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:316"
#~ msgid ""
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "}\n"
#~ "----"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:318"
#~ msgid "== Финализация"
#~ msgstr "== Финализация"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:353"
#~ msgid "== Терминология AOP"
#~ msgstr "== Терминология AOP"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:413"
#~ msgid ""
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "}\n"
#~ "----"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:446"
#~ msgid "== Spring AOP checklist"
#~ msgstr "== Spring AOP checklist"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:453"
#~ msgid "== Пример аспекта"
#~ msgstr "== Пример аспекта"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:472"
#~ msgid ""
#~ "[source,java]\n"
#~ "----\n"
#~ "@Component @Aspect\n"
#~ "public class BenchmarkAspect {\n"
#~ "  @Around(\"@annotation(Benchmark)\")\n"
#~ "    //pointcut expression ^^^\n"
#~ "  public Object execEntryPoint(ProceedingJoinPoint joinPoint) \n"
#~ "                                    throws Throwable {\n"
#~ "    System.out.printf(\"[[[BENCHMARK method %s%n\",\n"
#~ "                   joinPoint.getSignature().getName());\n"
#~ "    long start = System.nanoTime();\n"
#~ "    Object retVal = joinPoint.proceed();\n"
#~ "    long end = System.nanoTime();\n"
#~ "    System.out.printf(\"Time: %dns]]]%n\", end - start);\n"
#~ "    return retVal;\n"
#~ "  }\n"
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "[source,java]\n"
#~ "----\n"
#~ "@Component @Aspect\n"
#~ "public class BenchmarkAspect {\n"
#~ "  @Around(\"@annotation(Benchmark)\")\n"
#~ "    //pointcut expression ^^^\n"
#~ "  public Object execEntryPoint(ProceedingJoinPoint joinPoint) \n"
#~ "                                    throws Throwable {\n"
#~ "    System.out.printf(\"[[[BENCHMARK method %s%n\",\n"
#~ "                   joinPoint.getSignature().getName());\n"
#~ "    long start = System.nanoTime();\n"
#~ "    Object retVal = joinPoint.proceed();\n"
#~ "    long end = System.nanoTime();\n"
#~ "    System.out.printf(\"Time: %dns]]]%n\", end - start);\n"
#~ "    return retVal;\n"
#~ "  }\n"
#~ "}\n"
#~ "----"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:573"
#~ msgid "proxyconfigurer2 -> preDestroy1;"
#~ msgstr "proxyconfigurer2 -> preDestroy1;"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:576"
#~ msgid ""
#~ "}\n"
#~ "----"
#~ msgstr ""
#~ "}\n"
#~ "----"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:613"
#~ msgid "== Spring Boot"
#~ msgstr "== Spring Boot"

#~ msgctxt "./slides14/src/main/asciidoc/lecture.adoc:694"
#~ msgid "== Демо"
#~ msgstr "== Демо"
